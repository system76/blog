__NUXT_JSONP__("/post/the-power-of-linux-scripts-with-garrett-wilke", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w){return {data:[{post:{id:"ZWZh1xIAAC4AdW7x",uid:"the-power-of-linux-scripts-with-garrett-wilke",url:d,type:"post",href:"https:\u002F\u002Fblog-system76.cdn.prismic.io\u002Fapi\u002Fv2\u002Fdocuments\u002Fsearch?ref=ZaBZ6xYAAC8AZ8JA&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22ZWZh1xIAAC4AdW7x%22%29+%5D%5D",tags:[],first_publication_date:"2023-12-01T15:15:48+0000",last_publication_date:"2023-12-22T18:07:02+0000",slugs:[],linked_documents:[],lang:"en-us",alternate_languages:[],data:{title:[{type:"heading1",text:"The Power of Linux Scripts with Garrett Wilke",spans:[]}],description:[{type:a,text:j,spans:[{start:c,end:k,type:e}]}],image:{dimensions:{width:1600,height:800},alt:h,copyright:d,url:"https:\u002F\u002Fimages.prismic.io\u002Fblog-system76\u002Fce40b0d5-6192-445f-a831-32428b56f41b_scripting-with-linux-two.png?auto=compress,format&rect=0,0,1200,600&w=1600&h=800",id:l,edit:{x:c,y:c,zoom:1.3333333333333333,background:i}},date:"2023-12-15T14:30:00+0000",slices:[{variation:"full-width",version:m,items:[{}],primary:{image:{dimensions:{width:3840,height:1280},alt:h,copyright:d,url:"https:\u002F\u002Fimages.prismic.io\u002Fblog-system76\u002Fbffce3e9-5c12-4554-bd5e-fb2e694f4201__Blog+Headers.png?auto=format%2Ccompress&rect=0%2C0%2C3840%2C1280&w=3840&h=1280",id:"ZXsu5REAACgAG_PE",edit:{x:c,y:c,zoom:n,background:i},small:{dimensions:{width:768,height:512},alt:h,copyright:d,url:"https:\u002F\u002Fimages.prismic.io\u002Fblog-system76\u002Fce40b0d5-6192-445f-a831-32428b56f41b_scripting-with-linux-two.png?auto=compress,format&rect=150,0,900,600&w=768&h=512",id:l,edit:{x:-128,y:c,zoom:.8533333333333334,background:i}}},showAlt:false},id:"post_image$3c39606e-ae83-4206-bd96-946d70bd064e",slice_type:"post_image",slice_label:d},{variation:"default-slice",version:m,items:[{}],primary:{text:[{type:"heading2",text:"Garrett's Linux Background",spans:[],direction:b},{type:a,text:"Garrett's Linux journey began in 1998 with Mandrake Linux, a distro based on Red Hat Linux. At this stage, Linux was an enigma, and his initial attempts resulted in frequent system crashes. Frustrated, he often reverted to Windows due to his inexperience with Linux.",spans:[],direction:b},{type:a,text:"Over time, Garrett adopted a habit of distro-hopping, exploring various Linux distributions and Desktop Environments. He grappled with misconceptions, believing that each DE was tied exclusively to certain distros, making Linux appear overly complex.",spans:[],direction:b},{type:a,text:"His Linux education took a pivotal turn when he ventured into Arch Linux installation, following the Arch Wiki meticulously. Upon reboot, he confronted a blank TTY screen devoid of a graphical interface. It was this moment that sparked his realization: Linux offered the flexibility to install any Desktop Environment, transcending distro boundaries. Suddenly, the Linux landscape began to make sense, instilling in him a profound understanding of the \"how and why.\"",spans:[],direction:b},{type:a,text:f,spans:[],direction:b},{type:a,text:"You’ve become known as quite the script master at System76. What language are you scripting in and where did you learn that?",spans:[{start:c,end:o,type:e},{start:c,end:o,type:g}],direction:b},{type:a,text:"I create scripts using a few tools and languages, mostly Bash and Python scripts. I learned how to script using Bash first. After getting Arch installed, I wanted to see if there was a way to automate the install. I was afraid of breaking my install like I had done so many times in the past. I learned that a Bash script is just regular commands you run in the terminal shell, which I had used to install Arch. I created a script that setup Arch for my system with all of my settings. I would test the script in a VM and tweak it until it just worked. At the time, I didn't know how to handle errors and edge cases, so it just brute forced it's way through the install process without any room for other settings or setups. This method I used to initially learn is good if you have a single purpose, but very bad if you want something dynamic.",spans:[],direction:b},{type:a,text:f,spans:[],direction:b},{type:a,text:"What is the benefit to making your scripts? The benefits to making scripts in general.",spans:[{start:c,end:p,type:e},{start:c,end:p,type:g}],direction:b},{type:a,text:"I think scripting feels somewhat ambiguous as a concept if you don't have a purpose for making one. There are so many things that can be done very easily with modern tools that you don't need to make a script to do these tasks, but there are still many things that do not have a tool created for it. The benefit of a script that does something useful does not have a metric by which to measure. It saves time and creates something that does a specific task, but it also gives a sense of accomplishment that you were able to automate something.",spans:[],direction:b},{type:a,text:f,spans:[],direction:b},{type:a,text:"How can people learn to make scripts? ",spans:[{start:c,end:q,type:e},{start:c,end:q,type:g}],direction:b},{type:a,text:"I think the best way to learn how to make scripts is to first have a use case for making one to begin with. Once you have a use case, you can then focus your energy on creating a script that provides value to your workflow. A good example of a use-case scenario is digital arts. If you create websites, videos, music, or digital art in general, then you will most likely have tools that are command-line-based alternatives to your GUI application. Converting video formats to different sizes and bitrates can be done with a GUI, but there are also ffmpeg commands to accomplish the same thing. You can create a script that converts your videos to all formats and sizes that you will need for your work. The same can be said for digital images. Manually resizing images for different mediums can be tedious. A script can automate this process and create every size image you need for your website\u002Fstorefront quickly.",spans:[],direction:b},{type:a,text:"See Garrett's tutorial on getting started with bash scripting.",spans:[{start:4,end:61,type:r,data:{link_type:s,url:"https:\u002F\u002Fsupport.system76.com\u002Farticles\u002Fbash-scripting-basics\u002F",target:t}}],direction:b},{type:a,text:f,spans:[],direction:b},{type:a,text:"Do you have to be a programmer? What kind of background do you need to have?",spans:[{start:c,end:k,type:e},{start:c,end:k,type:g}],direction:b},{type:a,text:"You do not need to be a programmer to learn how to write scripts. Most of the things I learned for scripting are simply commands I found in a search for how to do something. Once you know the command you need to accomplish a given task, you can then use that command in a script to automate the process. I would argue that creating a script removes the need to memorize various commands and flags\u002Farguments required to use it. Simply create a script and you don't need to worry about how it works later in the future when you approach the task again.",spans:[],direction:b},{type:a,text:f,spans:[],direction:b},{type:a,text:"Can you tell us about the coolest script you’ve written, not necessarily for work?",spans:[{start:c,end:u,type:e},{start:c,end:u,type:g}],direction:b},{type:a,text:"I think the coolest script I have written is for audio manipulation and conversion. Machine learning has produced so many really cool projects, from AI art generation to audio stem extraction. There are a few audio extraction tools out there. When I read the documentation for how to use these tools, the amount of effort required to read it and understand all of the options is very exhausting. I also fear that I will not remember all of the options available to me, thus repeating the process of reading the documentation all over again.",spans:[],direction:b},{type:a,text:"There is an audio extraction project called \"demucs\". The options for extracting audio stems are vast, ranging from how many stems you want to create, the quality of the extraction, the AI model used to extract the stems, and many other options\u002Fflags. Trying to remember all of these options can be difficult, and reading the docs every time you want to extract is very time-consuming.",spans:[],direction:b},{type:a,text:"I decided to read the entire documentation and list out all of the options available for the tool. Once I knew all of the options and how to use them, I wrote a script that asks the user what extraction methods they want to use, what AI model and quality, and then automatically extract the stems from the audio and name them accordingly. This script has made it incredibly simple for an audio engineer to use without needing to be a command line guru.",spans:[],direction:b},{type:a,text:f,spans:[],direction:b},{type:a,text:"How can people connect with you?",spans:[{start:c,end:v,type:e},{start:c,end:v,type:g}],direction:b},{type:a,text:"Garrett@system76.com",spans:[{start:c,end:20,type:r,data:{link_type:s,url:"mailto:Garrett@system76.com",target:t}}],direction:b},{type:a,text:f,spans:[],direction:b}]},id:"post_copy$09307eb8-6fa3-492e-b76f-fef23d041bf6",slice_type:"post_copy",slice_label:d}],socialText:d,socialLinks:[{link:{}}],seoTitle:w,seoDescription:j,seoSocial:[{image:{dimensions:{width:1200,height:600},alt:h,copyright:d,url:"https:\u002F\u002Fimages.prismic.io\u002Fblog-system76\u002F209044fc-5b2f-4eee-8800-9d7181fa4ea5_scripting-with-linux-one.png?auto=format%2Ccompress&rect=0%2C64%2C768%2C384&w=1200&h=600",id:"ZW9UJBIAAC4ASwvr",edit:{x:c,y:64,zoom:n,background:i}},title:w,description:j}]}},_img:{}}],fetch:{},mutations:void 0}}("paragraph","ltr",0,null,"em","","strong","Reads Scripting on Linux with Garrett Wilke with red geometric background and a System76 logo","transparent","Learn the benefits to scripting, how to get started and some cool use cases.",76,"ZW9UIxIAACwASwvm","sktwi1xtmkfgx8626",1,124,86,38,"hyperlink","Web","_blank",82,32,"The power of Linux Scripts with Garrett Wilke")));