__NUXT_JSONP__("/post/the-quality-assurance-process-with-levi", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){return {data:[{post:{id:"ZBnJFxYAAC8AXm0i",uid:k,url:b,type:"post",href:"https:\u002F\u002Fblog-system76.cdn.prismic.io\u002Fapi\u002Fv2\u002Fdocuments\u002Fsearch?ref=ZBxNURYAAC4AZb0q&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22ZBnJFxYAAC8AXm0i%22%29+%5D%5D",tags:[],first_publication_date:l,last_publication_date:l,slugs:[k],linked_documents:[],lang:"en-us",alternate_languages:[],data:{title:[{type:"heading1",text:h,spans:[]}],description:[{type:a,text:i,spans:[]}],image:{dimensions:{width:1600,height:800},alt:b,copyright:b,url:"https:\u002F\u002Fimages.prismic.io\u002Fblog-system76\u002F5196ef1b-acd4-495d-9bc9-5100ef3efd43_QA-w-Levi-blog-header-01.png?auto=compress,format&rect=256,0,1024,512&w=1600&h=800"},date:"2023-03-23T07:00:00+0000",slices:[{variation:"full-width",version:m,items:[{}],primary:{image:{dimensions:{width:3840,height:1280},alt:b,copyright:b,url:"https:\u002F\u002Fimages.prismic.io\u002Fblog-system76\u002F5196ef1b-acd4-495d-9bc9-5100ef3efd43_QA-w-Levi-blog-header-01.png?auto=compress,format&rect=0,0,1536,512&w=3840&h=1280",small:{dimensions:{width:768,height:512},alt:b,copyright:b,url:"https:\u002F\u002Fimages.prismic.io\u002Fblog-system76\u002F5196ef1b-acd4-495d-9bc9-5100ef3efd43_QA-w-Levi-blog-header-01.png?auto=compress,format&rect=384,0,768,512&w=768&h=512"}},showAlt:b},id:"post_image$6960f8e0-ade0-4e7e-9820-76dd92fb4552",slice_type:"post_image",slice_label:b},{variation:"default-slice",version:m,items:[{}],primary:{text:[{type:a,text:"Hi! I'm Levi, the quality assurance manager at System76. I’m here to take you through what the initial QA process looks like for a brand new product. ",spans:[]},{type:a,text:c,spans:[]},{type:a,text:"The first thing that we do when testing a product is see if it runs Linux. We try to install Pop!_OS or Ubuntu. We see what works or breaks and write all of it down. If we find any weird bugs, we write down the steps to reproduce them, and then share all of this with the engineers.",spans:[]},{type:e,url:"https:\u002F\u002Fimages.prismic.io\u002Fblog-system76\u002F7e2cf4e1-84dc-449c-9529-b7b1dabd7f08_image2.png?auto=compress,format",alt:f,copyright:b,dimensions:{width:719,height:480}},{type:d,text:"FIRMWARE",spans:[]},{type:a,text:"After running Linux on the system, if it's an open firmware model, which most of our Intel products have been lately, the engineering team takes the model and starts developing firmware and embedded controller firmware (EC firmware). The EC firmware can be thought of as the control center for the laptop. It controls things like power, the fans, the keyboard backlight, the keyboard itself, touchpad, etc.",spans:[{start:238,end:249,type:"hyperlink",data:{link_type:"Web",url:"https:\u002F\u002Fgithub.com\u002Fsystem76\u002Fec",target:"_blank"}}]},{type:a,text:c,spans:[]},{type:a,text:"Then there's the BIOS firmware, or the proper firmware. The BIOS firmware is what talks to the CPU and makes sure the CPU knows what to do. There's a lot of interplay between the EC firmware and the regular BIOS, and the engineers are the ones that have the overall knowledge of the firmware, but most of our engineers will typically move into the machine that they're developing the firmware on. That's one of the great things our engineers do, they make the firmware from the machine that they’re making the firmware for.",spans:[]},{type:d,text:"FLASHING",spans:[]},{type:a,text:"Next, we do a lot of external flashing of the firmware onto the machines. The QA team flashes our own units. The engineers typically have their own unit and we have a couple of units in the engineering lab or the QA lab. When we do the first flash, it requires external tools. For that, we use a few different tools.",spans:[]},{type:e,url:"https:\u002F\u002Fimages.prismic.io\u002Fblog-system76\u002F4f7253dc-b765-4b7e-b4d7-940c7c9f303f_image6.png?auto=compress,format",alt:f,copyright:b,dimensions:{width:n,height:977}},{type:a,text:c,spans:[]},{type:d,text:"BIOS firmware flashing",spans:[]},{type:a,text:"The main BIOS flasher we prefer is the Raspberry Pi because it is faster, but the other flasher we use is the CH341A. For the CH341A, we have wired plugs to interface with the BIOS chip itself. The new wired plug is used on the WSON8 chips and has pogo pins that attach. The old style is used on the SOIC8 chips and it has a clip that directly attaches onto the integrated circuit. This older one is much harder to do because when you're flashing it, you have to hold it perfectly still for about 10 minutes while it's writing the bios file to the chip. If you move even just a little bit, you break the contact and you have to start over because you have an incomplete flash.",spans:[]},{type:e,url:"https:\u002F\u002Fprismic-io.s3.amazonaws.com\u002Fblog-system76\u002F1fa794de-540c-4555-b14d-5eca39d372f2_IMG_1118+%284%29.jpg",alt:f,copyright:b,dimensions:{width:4032,height:3024}},{type:d,text:"EC Firmware Flashing",spans:[]},{type:a,text:"When we're flashing the embedded controller firmware, that happens through the keyboard connector. We remove the keyboard, take out the FPC cable that connects the keyboard, and we use the Arduino mega with a PC breakout board and we connect this into the keyboard connector slot. It is able to program the embedded controller firmware through that connector. When the engineering team has a good first minimum viable product for the firmware and the EC firmware, that's when QA starts stepping in.",spans:[]},{type:a,text:c,spans:[]},{type:a,text:"Once we do the first flash It's much easier because after that it can internally flash itself. It's just that first one that we have to do with the BIOS clip. That's how we do firmware updates over the year. When we are done with the first round of quality assurance tests on the laptops, we're just making note of what works, what doesn't work, and then optimizing.",spans:[]},{type:a,text:c,spans:[]},{type:d,text:"HARDWARE COMPATIBILITY",spans:[]},{type:a,text:"There are many hardware compatibility tests we do when we get a brand new product. We have checklists that get longer every time we find something new that needs to be tested—we add it to the list of things like:",spans:[]},{type:a,text:c,spans:[]},{type:g,text:"Testing the hotkeys on the keyboard",spans:[]},{type:g,text:"Work volume up\u002Fdown",spans:[]},{type:g,text:"Touchpad lock",spans:[]},{type:g,text:"Keyboard brightness",spans:[]},{type:a,text:c,spans:[]},{type:a,text:"We have various types of NVMEs, SATA drives and RAM chips that we use to test the machines. We mainly focus on the types of hardware that we sell the units with, but we also test a lot of other brands because we know users are going to add drives and RAM. We want to make sure that it’s going to be a painless process for the users. Other hardware compatibility items we check on are ports, charging, power limits, and benchmarking.",spans:[]},{type:j,text:"Ports and charging",spans:[]},{type:a,text:"There's a lot of power behaviors in our checklist. To test charging, we drain the laptop battery down to basically zero, charge it back up all the way to see if there’s interruptions, and make sure it comes back on as expected and runs smoothly. We also make sure that you can stress the machine with the USB-C charger connected and the EC firmware allows it to continue to charge.",spans:[]},{type:a,text:c,spans:[]},{type:a,text:"Our machines with a U-class CPU like the Darter Pro, Galago Pro, Lemur Pro, or the Pangolin are a little bit more complicated because they support USB-C charging. That means we have to make sure they work well with docking stations. They provide charging over USB-C, deliver Thunderbolt and a video signal out over USB-C, and any USB devices that are connected to the dock as well. So that USB-C port is doing a lot at once, and it all has to work. Monitors too; we test that USB-C charging, USB ports, Ethernet, and the speakers are good to go.",spans:[]},{type:a,text:c,spans:[]},{type:a,text:"Then we check the barrel charger. Connecting the barrel charger and USB-C charger to the laptop at the same time is something the EC firmware should be able to handle. We check that it’s not trying to charge through both connections at the same time to make sure the laptop isn’t doing something potentially harmful to the battery.",spans:[]},{type:a,text:c,spans:[]},{type:j,text:"Power limits",spans:[]},{type:a,text:"You can only get so much out of the battery safely. So there are safety mechanisms that turn the machine off when too much is drawn to the battery. You don't want to start compiling your project and get halfway through, then the CPU takes too much power from the charger and it shuts down the charger. Sometimes it’ll overdraw the battery because the battery has a built in circuit, sort of like a circuit breaker.",spans:[]},{type:a,text:"Making sure we don't hit any of those limits with the embedded controller firmware is super important. And if it does, we adjust the settings in the firmware.",spans:[]},{type:a,text:c,spans:[]},{type:j,text:"Benchmarking",spans:[]},{type:a,text:"With each product we want to make sure that it is putting out all of the performance that it should. Users will be playing games, machine learning, and computing. All of that needs to work, right?",spans:[]},{type:a,text:c,spans:[]},{type:a,text:"One of the things we do is benchmarking, making sure under full power that the battery and AC adapter is keeping up with what users that are going to do, like gaming. To test and make sure that it’s working correctly we'll just fire up a game and play it for a little while. A game I like is Deus Ex: Mankind Divided because it has a built-in benchmarking tool that gives empirical data. It tells me what kind of frame rate it's putting out every time, so I can see if it starts dipping. If it does then I look into it; is it thermal throttling? What exactly is going on there? But actually using it the way it's going to be used by the people that want to play games is important.",spans:[{start:292,end:316,type:"em"}]},{type:a,text:c,spans:[]},{type:a,text:"Other than that, other performance tests are done through a series of Phoronix test suite benchmarks. There's also a lot of benchmarking suites at openbenchmarking.org. That's usually where I go to look for different ranges of tests that I run. We will run a series of really CPU-intensive benchmarks, making sure that it is in line with expectations. Same with the GPU, running a series of GPU-intensive benchmarks. Then we run them at the same time, making sure the thermal system is going to keep up when you're running the machine at full load.",spans:[]},{type:a,text:c,spans:[]},{type:d,text:"SOUND",spans:[]},{type:e,url:"https:\u002F\u002Fimages.prismic.io\u002Fblog-system76\u002F758ea1fe-ce9a-4df7-ac7e-be131c1dcebe_image4.jpg?auto=compress,format",alt:f,copyright:b,dimensions:{width:1500,height:n}},{type:a,text:"Acoustic performance is important. At the factory, there is a sound cube that’s painted up like a big Rubik's cube. It’s made up of drywall and wood and insulated heavily in the walls. There’s an added layer of sound deadening foam on the inside, because the factory gets very loud with all the machines running. Having this quiet environment in the factory is important to make sure the machine sounds right and isn’t overly noisy. If it is, we fix it. ",spans:[]},{type:a,text:c,spans:[]},{type:d,text:"Conclusion",spans:[]},{type:a,text:"When we get a brand new product, QA testing can be a complicated process that can take weeks or a couple of months. What I described was a general overview of this process. If you have any questions about it, feel free to reach out to me. by my username in our Pop!_OS Mattermost chat is leviport. It's at chat.pop-os.org.",spans:[]},{type:a,text:c,spans:[]},{type:a,text:"And with that, until next time! Take care.",spans:[]}]},id:"post_copy$a05096a9-9ca9-4372-ba46-1b324f1fbacb",slice_type:"post_copy",slice_label:b}],socialText:b,socialLinks:[{link:{}}],seoTitle:h,seoDescription:i,seoSocial:[{image:{dimensions:{width:1200,height:600},alt:b,copyright:b,url:"https:\u002F\u002Fimages.prismic.io\u002Fblog-system76\u002F5196ef1b-acd4-495d-9bc9-5100ef3efd43_QA-w-Levi-blog-header-01.png?auto=compress,format&rect=256,0,1024,512&w=1200&h=600"},title:h,description:i}]}},_img:{}}],fetch:{},mutations:void 0}}("paragraph",null,"","heading2","image","Image","list-item","The Quality Assurance Process with Levi","Curious about our quality assurance process? Levi, our QA Lead, takes you through a general overview of how QA approaches a new product, from testing firmware to acoustics and everything in between.","heading3","the-quality-assurance-process-with-levi","2023-03-23T13:00:01+0000","sktwi1xtmkfgx8626",1999)));